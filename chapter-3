1.fn main() {
    let number = -5;
    
    if number > 0 {
        println!("Positive");
    } else if number < 0 {
        println!("Negative");
    } else {
        println!("Zero");
    }
}
output:
Negative


2.fn main() {
    let number = 7;
    
    if number % 2 == 0 {
        println!("{} is even", number);
    } else {
        println!("{} is odd", number);
    }
}
output:
7 is odd


3.fn main() {
    let num1 = 10.0;
    let num2 = 5.0;
    let op = '+'; 
    let result = match op {
        '+' => num1 + num2,
        '-' => num1 - num2,
        '*' => num1 * num2,
        '/' => num1 / num2,
        _ => {
            println!("Invalid operator");
            return;
        }
    };

    println!("{} {} {} = {}", num1, op, num2, result);
}
output:
10 + 5 = 15


4.fn main() {
    let some_value = Some(5);
    
    if let Some(x) = some_value {
        println!("Found value in Option: {}", x);
    } else {
        println!("No value found");
    }
    let result: Result<i32, &str> = Ok(42);
    
    if let Ok(num) = result {
        println!("Successfully got: {}", num);
    } else if let Err(e) = result {
        println!("Error occurred: {}", e);
    }
    let number = 7;
    
    if let 7 = number {
        println!("Lucky number 7!");
    } else {
        println!("Not the lucky number");
    }
    let age = 25;
    
    if let 18..=30 = age {
        println!("Age {} is in young adult range", age);
    } else {
        println!("Age {} is outside young adult range", age);
    }
}

output:
Found value in Option: 5
Successfully got: 42
Lucky number 7!
Age 25 is in young adult range


5.fn main() {
    for i in 1..=10 {
        println!("{}", i);
    }
}

otput:
1
2
3
4
5
6
7
8
9
10

6.fn main() {
    'outer: for i in 1..=10 {
        'inner: for j in 1..=10 {
            print!("{:4}", i * j);
        }
        println!(); // New line after each row
    }
}


output: 1   2   3   4   5   6   7   8   9  10
   2   4   6   8  10  12  14  16  18  20
   3   6   9  12  15  18  21  24  27  30
   4   8  12  16  20  24  28  32  36  40
   5  10  15  20  25  30  35  40  45  50
   6  12  18  24  30  36  42  48  54  60
   7  14  21  28  35  42  49  56  63  70
   8  16  24  32  40  48  56  64  72  80
   9  18  27  36  45  54  63  72  81  90
  10  20  30  40  50  60  70  80  90 100

7.fn main() {
    let mut count = 0;
    let mut value = 1;

    while value <= 100 {
        value *= 2; // double the value each time
        count += 1;
    }

    println!("Loop executed {} times until value exceeded 100.", count);
}

output:Loop executed 7 times until value exceeded 100.

8.fn main() {
    for i in 1..=5 {
        for _ in 0..i {
            print!("&");
        }
        println!();
    }
}

output:
&
&&
&&&
&&&&
&&&&&

9.fn main() {
    let numbers = vec![10, 20, 30, 40, 50];

    println!("Values in the collection:");
    for value in numbers.iter() {
        println!("{}", value);
    }
}

output:
Values in the collection:
10
20
30
40
50
